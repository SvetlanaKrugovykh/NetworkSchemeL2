// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ MAC –∞–¥—Ä–µ—Å–æ–≤
require('dotenv').config();

const HOST = process.env.HOST || 'localhost';
const PORT = process.env.PORT || 7111;
const BASE_URL = `http://${HOST}:${PORT}`;

const testMac = '11:22:33:44:55:66';
const normalizedMac = testMac.replace(/[:-]/g, '').toLowerCase();

console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ MAC –∞–¥—Ä–µ—Å–∞:');
console.log('–ò—Å—Ö–æ–¥–Ω—ã–π MAC:', testMac);
console.log('–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π:', normalizedMac);
console.log('–°–µ—Ä–≤–µ—Ä:', BASE_URL);

// –¢–µ—Å—Ç —á–µ—Ä–µ–∑ fetch API
fetch(`${BASE_URL}/api/macs/${normalizedMac}`)
  .then(response => response.json())
  .then(data => {
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:', data);
    if (data.success && data.data.length > 0) {
      console.log('‚úÖ MAC –Ω–∞–π–¥–µ–Ω:', data.data);
    } else {
      console.log('‚ùå MAC –Ω–µ –Ω–∞–π–¥–µ–Ω');

      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
      const partialMac = normalizedMac.substring(0, 6);
      console.log('üîç –ü—Ä–æ–±—É–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–π –ø–æ–∏—Å–∫:', partialMac);

      return fetch(`${BASE_URL}/api/macs/${partialMac}`);
    }
  })
  .then(response => {
    if (response) {
      return response.json();
    }
  })
  .then(data => {
    if (data) {
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:', data);
    }
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  });
